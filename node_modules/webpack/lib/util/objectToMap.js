/**
 * convert an object into its 2D array equivalent to be turned
 * into an ES6 map
 *
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
 * @param {object} obj - any object type that works with Object.keys()
=======
 * @param {object} obj any object type that works with Object.keys()
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
>>>>>>> ee12506f5 (figuring out lint)
 * @param {object} obj any object type that works with Object.keys()
=======
 * @param {object} obj - any object type that works with Object.keys()
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
 * @param {object} obj - any object type that works with Object.keys()
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> ee12506f5 (figuring out lint)
 * @returns {Map<TODO, TODO>} an ES6 Map of KV pairs
 */
module.exports = function objectToMap(obj) {
	return new Map(
		Object.keys(obj).map(key => {
			/** @type {[string, string]} */
			const pair = [key, obj[key]];
			return pair;
		})
	);
};

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findConfigUpwards = findConfigUpwards;
exports.findPackageData = findPackageData;
exports.findRelativeConfig = findRelativeConfig;
exports.findRootConfig = findRootConfig;
exports.loadConfig = loadConfig;
exports.resolvePlugin = resolvePlugin;
exports.resolvePreset = resolvePreset;
exports.loadPlugin = loadPlugin;
exports.loadPreset = loadPreset;
<<<<<<< HEAD
<<<<<<< HEAD

function findConfigUpwards(rootDir) {
  return null;
}

function findPackageData(filepath) {
=======
=======
>>>>>>> 84b8e337c (figuring out lint)
exports.ROOT_CONFIG_FILENAMES = void 0;

function* findConfigUpwards(rootDir) {
  return null;
}

function* findPackageData(filepath) {
<<<<<<< HEAD
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======

function findConfigUpwards(rootDir) {
  return null;
}

function findPackageData(filepath) {
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
  return {
    filepath,
    directories: [],
    pkg: null,
    isPackage: false
  };
}

<<<<<<< HEAD
<<<<<<< HEAD
function findRelativeConfig(pkgData, envName, caller) {
=======
function* findRelativeConfig(pkgData, envName, caller) {
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
function* findRelativeConfig(pkgData, envName, caller) {
=======
function findRelativeConfig(pkgData, envName, caller) {
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
  return {
    pkg: null,
    config: null,
    ignore: null
  };
}

<<<<<<< HEAD
<<<<<<< HEAD
function findRootConfig(dirname, envName, caller) {
  return null;
}

function loadConfig(name, dirname, envName, caller) {
  throw new Error(`Cannot load ${name} relative to ${dirname} in a browser`);
}

=======
=======
>>>>>>> 84b8e337c (figuring out lint)
function* findRootConfig(dirname, envName, caller) {
  return null;
}

function* loadConfig(name, dirname, envName, caller) {
  throw new Error(`Cannot load ${name} relative to ${dirname} in a browser`);
}

const ROOT_CONFIG_FILENAMES = [];
exports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;

<<<<<<< HEAD
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
function findRootConfig(dirname, envName, caller) {
  return null;
}

function loadConfig(name, dirname, envName, caller) {
  throw new Error(`Cannot load ${name} relative to ${dirname} in a browser`);
}

>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
function resolvePlugin(name, dirname) {
  return null;
}

function resolvePreset(name, dirname) {
  return null;
}

function loadPlugin(name, dirname) {
  throw new Error(`Cannot load plugin ${name} relative to ${dirname} in a browser`);
}

function loadPreset(name, dirname) {
  throw new Error(`Cannot load preset ${name} relative to ${dirname} in a browser`);
}
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FLOW_MATCHER = /^@(?:no)?flow$/;

<<<<<<< HEAD
<<<<<<< HEAD
exports.default = function (comment) {
=======
exports.default = function (comment, strict) {
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
exports.default = function (comment, strict) {
=======
exports.default = function (comment) {
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
  // eslint-disable-next-line flowtype/require-valid-file-annotation
  // The flow parser splits comments with the following regex to look for the @flow flag.
  // See https://github.com/facebook/flow/blob/a96249b93541f2f7bfebd8d62085bf7a75de02f2/src/parsing/docblock.ml#L39
  return _lodash2.default.some(comment.split(/[ \t\r\n\\*/]+/), function (commentPart) {
<<<<<<< HEAD
<<<<<<< HEAD
    return FLOW_MATCHER.test(commentPart);
  });
};

module.exports = exports['default'];
=======
=======
>>>>>>> 84b8e337c (figuring out lint)
    var match = commentPart.match(FLOW_MATCHER);

    if (match === null) {
      return false;
    }

    return !strict || match[0] === '@flow';
  });
};

module.exports = exports.default;
<<<<<<< HEAD
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
    return FLOW_MATCHER.test(commentPart);
  });
};

module.exports = exports['default'];
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)

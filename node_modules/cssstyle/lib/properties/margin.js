'use strict';

var parsers = require('../parsers.js');
var TYPES = parsers.TYPES;

<<<<<<< HEAD
var isValid = function(v) {
=======
var isValid = function (v) {
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
  if (v.toLowerCase() === 'auto') {
    return true;
  }
  var type = parsers.valueType(v);
  return (
<<<<<<< HEAD
    type === TYPES.LENGTH ||
    type === TYPES.PERCENT ||
=======
    type === TYPES.NULL_OR_EMPTY_STR ||
    type === TYPES.LENGTH ||
    type === TYPES.PERCENT ||
    type === TYPES.CALC ||
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
    (type === TYPES.INTEGER && (v === '0' || v === 0))
  );
};

<<<<<<< HEAD
var parser = function(v) {
=======
var parser = function (v) {
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
  var V = v.toLowerCase();
  if (V === 'auto') {
    return V;
  }
  return parsers.parseMeasurement(v);
};

var mySetter = parsers.implicitSetter('margin', '', isValid, parser);
var myGlobal = parsers.implicitSetter(
  'margin',
  '',
<<<<<<< HEAD
  function() {
    return true;
  },
  function(v) {
=======
  function () {
    return true;
  },
  function (v) {
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
    return v;
  }
);

module.exports.definition = {
<<<<<<< HEAD
  set: function(v) {
    if (typeof v === 'number') {
      v = String(v);
    }
=======
  set: function (v) {
    if (typeof v === 'number') {
      v = String(v);
    }
    if (v === null) {
      v = '';
    }
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
    if (typeof v !== 'string') {
      return;
    }
    var V = v.toLowerCase();
    switch (V) {
      case 'inherit':
      case 'initial':
      case 'unset':
      case '':
        myGlobal.call(this, V);
        break;

      default:
        mySetter.call(this, v);
        break;
    }
  },
<<<<<<< HEAD
  get: function() {
=======
  get: function () {
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
    return this.getPropertyValue('margin');
  },
  enumerable: true,
  configurable: true,
};

module.exports.isValid = isValid;
module.exports.parser = parser;

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
/* eslint-env jest */
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
/* eslint-env jest */
=======
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
>>>>>>> bda8256cb (figuring out lint)
/* eslint-env jest */
=======
>>>>>>> 6be43a322 (figuring out lint)
=======
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> ee12506f5 (figuring out lint)
=======
=======
=======
/* eslint-env jest */
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
/* eslint-env jest */
=======
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
/**
 * @fileoverview Enforce scope prop is only used on <th> elements.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

import { RuleTester } from 'eslint';
import parserOptionsMapper from '../../__util__/parserOptionsMapper';
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
import parsers from '../../__util__/helpers/parsers';
=======
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
=======
>>>>>>> bda8256cb (figuring out lint)
=======
import parsers from '../../__util__/helpers/parsers';
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> ee12506f5 (figuring out lint)
=======
import parsers from '../../__util__/helpers/parsers';
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
import parsers from '../../__util__/helpers/parsers';
=======
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
import parsers from '../../__util__/helpers/parsers';
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
import rule from '../../../src/rules/scope';

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

const ruleTester = new RuleTester();

const expectedError = {
  message: 'The scope prop can only be used on <th> elements.',
  type: 'JSXAttribute',
};

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
const componentsSettings = {
  'jsx-a11y': {
    components: {
      Foo: 'div',
      TableHeader: 'th',
    },
  },
};

ruleTester.run('scope', rule, {
  valid: parsers.all([].concat(
=======
ruleTester.run('scope', rule, {
  valid: [
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
>>>>>>> ee12506f5 (figuring out lint)
=======
>>>>>>> bda8256cb (figuring out lint)
ruleTester.run('scope', rule, {
  valid: [
=======
=======
>>>>>>> 6be43a322 (figuring out lint)
=======
>>>>>>> 5209f27ef (figuring out lint)
const componentsSettings = {
  'jsx-a11y': {
    components: {
      Foo: 'div',
      TableHeader: 'th',
    },
  },
};

ruleTester.run('scope', rule, {
  valid: parsers.all([].concat(
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
=======
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
ruleTester.run('scope', rule, {
  valid: [
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
ruleTester.run('scope', rule, {
  valid: [
=======
const componentsSettings = {
  'jsx-a11y': {
    components: {
      Foo: 'div',
      TableHeader: 'th',
    },
  },
};

ruleTester.run('scope', rule, {
  valid: parsers.all([].concat(
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
    { code: '<div />;' },
    { code: '<div foo />;' },
    { code: '<th scope />' },
    { code: '<th scope="row" />' },
    { code: '<th scope={foo} />' },
    { code: '<th scope={"col"} {...props} />' },
    { code: '<Foo scope="bar" {...props} />' },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    { code: '<TableHeader scope="row" />', settings: componentsSettings },
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
    { code: '<div scope />', errors: [expectedError] },
    { code: '<Foo scope="bar" />', settings: componentsSettings, errors: [expectedError] },
  )).map(parserOptionsMapper),
=======
=======
>>>>>>> 84b8e337c (figuring out lint)
=======
>>>>>>> ee12506f5 (figuring out lint)
=======
>>>>>>> bda8256cb (figuring out lint)
  ].map(parserOptionsMapper),
  invalid: [
    { code: '<div scope />', errors: [expectedError] },
  ].map(parserOptionsMapper),
<<<<<<< HEAD
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
=======
>>>>>>> 6be43a322 (figuring out lint)
=======
>>>>>>> 5209f27ef (figuring out lint)
    { code: '<TableHeader scope="row" />', settings: componentsSettings },
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
    { code: '<div scope />', errors: [expectedError] },
    { code: '<Foo scope="bar" />', settings: componentsSettings, errors: [expectedError] },
  )).map(parserOptionsMapper),
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
=======
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
=======
>>>>>>> 84b8e337c (figuring out lint)
  ].map(parserOptionsMapper),
  invalid: [
    { code: '<div scope />', errors: [expectedError] },
  ].map(parserOptionsMapper),
<<<<<<< HEAD
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
    { code: '<TableHeader scope="row" />', settings: componentsSettings },
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
    { code: '<div scope />', errors: [expectedError] },
    { code: '<Foo scope="bar" />', settings: componentsSettings, errors: [expectedError] },
  )).map(parserOptionsMapper),
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
});

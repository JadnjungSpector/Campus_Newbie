<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
/* eslint-env jest */
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
/* eslint-env jest */
=======
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
>>>>>>> bda8256cb (figuring out lint)
/* eslint-env jest */
=======
>>>>>>> 6be43a322 (figuring out lint)
=======
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> ee12506f5 (figuring out lint)
=======
=======
=======
/* eslint-env jest */
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
/* eslint-env jest */
=======
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
/**
 * @fileoverview Enforce onmouseover/onmouseout are accompanied
 *  by onfocus/onblur.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

import { RuleTester } from 'eslint';
import parserOptionsMapper from '../../__util__/parserOptionsMapper';
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
import parsers from '../../__util__/helpers/parsers';
=======
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
=======
>>>>>>> bda8256cb (figuring out lint)
=======
import parsers from '../../__util__/helpers/parsers';
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> ee12506f5 (figuring out lint)
=======
import parsers from '../../__util__/helpers/parsers';
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
import parsers from '../../__util__/helpers/parsers';
=======
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
import parsers from '../../__util__/helpers/parsers';
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
import rule from '../../../src/rules/mouse-events-have-key-events';

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

const ruleTester = new RuleTester();

const mouseOverError = {
  message: 'onMouseOver must be accompanied by onFocus for accessibility.',
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
  type: 'JSXAttribute',
};
const pointerEnterError = {
  message: 'onPointerEnter must be accompanied by onFocus for accessibility.',
  type: 'JSXAttribute',
};
const mouseOutError = {
  message: 'onMouseOut must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
};
const pointerLeaveError = {
  message: 'onPointerLeave must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
};

ruleTester.run('mouse-events-have-key-events', rule, {
  valid: parsers.all([].concat(
=======
=======
>>>>>>> 84b8e337c (figuring out lint)
=======
>>>>>>> ee12506f5 (figuring out lint)
=======
>>>>>>> bda8256cb (figuring out lint)
  type: 'JSXOpeningElement',
};
const mouseOutError = {
  message: 'onMouseOut must be accompanied by onBlur for accessibility.',
  type: 'JSXOpeningElement',
};

ruleTester.run('mouse-events-have-key-events', rule, {
  valid: [
<<<<<<< HEAD
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
=======
>>>>>>> 6be43a322 (figuring out lint)
=======
>>>>>>> 5209f27ef (figuring out lint)
  type: 'JSXAttribute',
};
const pointerEnterError = {
  message: 'onPointerEnter must be accompanied by onFocus for accessibility.',
  type: 'JSXAttribute',
};
const mouseOutError = {
  message: 'onMouseOut must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
};
const pointerLeaveError = {
  message: 'onPointerLeave must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
};

ruleTester.run('mouse-events-have-key-events', rule, {
  valid: parsers.all([].concat(
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
=======
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
=======
>>>>>>> 84b8e337c (figuring out lint)
  type: 'JSXOpeningElement',
};
const mouseOutError = {
  message: 'onMouseOut must be accompanied by onBlur for accessibility.',
  type: 'JSXOpeningElement',
};

ruleTester.run('mouse-events-have-key-events', rule, {
  valid: [
<<<<<<< HEAD
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
  type: 'JSXAttribute',
};
const pointerEnterError = {
  message: 'onPointerEnter must be accompanied by onFocus for accessibility.',
  type: 'JSXAttribute',
};
const mouseOutError = {
  message: 'onMouseOut must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
};
const pointerLeaveError = {
  message: 'onPointerLeave must be accompanied by onBlur for accessibility.',
  type: 'JSXAttribute',
};

ruleTester.run('mouse-events-have-key-events', rule, {
  valid: parsers.all([].concat(
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
    { code: '<div onMouseOver={() => void 0} onFocus={() => void 0} />;' },
    {
      code: '<div onMouseOver={() => void 0} onFocus={() => void 0} {...props} />;',
    },
    { code: '<div onMouseOver={handleMouseOver} onFocus={handleFocus} />;' },
    {
      code: '<div onMouseOver={handleMouseOver} onFocus={handleFocus} {...props} />;',
    },
    { code: '<div />;' },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    { code: '<div onBlur={() => {}} />' },
    { code: '<div onFocus={() => {}} />' },
=======
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
=======
>>>>>>> bda8256cb (figuring out lint)
=======
=======
>>>>>>> 5209f27ef (figuring out lint)
    { code: '<div onBlur={() => {}} />' },
    { code: '<div onFocus={() => {}} />' },
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> ee12506f5 (figuring out lint)
=======
<<<<<<< HEAD
    { code: '<div onBlur={() => {}} />' },
    { code: '<div onFocus={() => {}} />' },
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
    { code: '<div onBlur={() => {}} />' },
    { code: '<div onFocus={() => {}} />' },
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
    { code: '<div onMouseOut={() => void 0} onBlur={() => void 0} />' },
    { code: '<div onMouseOut={() => void 0} onBlur={() => void 0} {...props} />' },
    { code: '<div onMouseOut={handleMouseOut} onBlur={handleOnBlur} />' },
    { code: '<div onMouseOut={handleMouseOut} onBlur={handleOnBlur} {...props} />' },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    { code: '<MyElement />' },
    { code: '<MyElement onMouseOver={() => {}} />' },
    { code: '<MyElement onMouseOut={() => {}} />' },
    { code: '<MyElement onBlur={() => {}} />' },
    { code: '<MyElement onFocus={() => {}} />' },
    { code: '<MyElement onMouseOver={() => {}} {...props} />' },
    { code: '<MyElement onMouseOut={() => {}} {...props} />' },
    { code: '<MyElement onBlur={() => {}} {...props} />' },
    { code: '<MyElement onFocus={() => {}} {...props} />' },
    /* Passing in empty options doesn't check any event handlers */
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [{ hoverInHandlers: [], hoverOutHandlers: [] }],
    },
    /* Passing in custom handlers */
    {
      code: '<div onMouseOver={() => {}} onFocus={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseOver'] }],
    },
    {
      code: '<div onMouseEnter={() => {}} onFocus={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseEnter'] }],
    },
    {
      code: '<div onMouseOut={() => {}} onBlur={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseOut'] }],
    },
    {
      code: '<div onMouseLeave={() => {}} onBlur={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseLeave'] }],
    },
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] },
      ],
    },
    /* Custom options only checks the handlers passed in */
    {
      code: '<div onMouseLeave={() => {}} />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] }],
    },
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
=======
  ].map(parserOptionsMapper),
  invalid: [
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
>>>>>>> ee12506f5 (figuring out lint)
=======
>>>>>>> bda8256cb (figuring out lint)
  ].map(parserOptionsMapper),
  invalid: [
=======
=======
>>>>>>> 6be43a322 (figuring out lint)
=======
>>>>>>> 5209f27ef (figuring out lint)
    { code: '<MyElement />' },
    { code: '<MyElement onMouseOver={() => {}} />' },
    { code: '<MyElement onMouseOut={() => {}} />' },
    { code: '<MyElement onBlur={() => {}} />' },
    { code: '<MyElement onFocus={() => {}} />' },
    { code: '<MyElement onMouseOver={() => {}} {...props} />' },
    { code: '<MyElement onMouseOut={() => {}} {...props} />' },
    { code: '<MyElement onBlur={() => {}} {...props} />' },
    { code: '<MyElement onFocus={() => {}} {...props} />' },
    /* Passing in empty options doesn't check any event handlers */
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [{ hoverInHandlers: [], hoverOutHandlers: [] }],
    },
    /* Passing in custom handlers */
    {
      code: '<div onMouseOver={() => {}} onFocus={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseOver'] }],
    },
    {
      code: '<div onMouseEnter={() => {}} onFocus={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseEnter'] }],
    },
    {
      code: '<div onMouseOut={() => {}} onBlur={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseOut'] }],
    },
    {
      code: '<div onMouseLeave={() => {}} onBlur={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseLeave'] }],
    },
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] },
      ],
    },
    /* Custom options only checks the handlers passed in */
    {
      code: '<div onMouseLeave={() => {}} />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] }],
    },
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
=======
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
  ].map(parserOptionsMapper),
  invalid: [
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
  ].map(parserOptionsMapper),
  invalid: [
=======
    { code: '<MyElement />' },
    { code: '<MyElement onMouseOver={() => {}} />' },
    { code: '<MyElement onMouseOut={() => {}} />' },
    { code: '<MyElement onBlur={() => {}} />' },
    { code: '<MyElement onFocus={() => {}} />' },
    { code: '<MyElement onMouseOver={() => {}} {...props} />' },
    { code: '<MyElement onMouseOut={() => {}} {...props} />' },
    { code: '<MyElement onBlur={() => {}} {...props} />' },
    { code: '<MyElement onFocus={() => {}} {...props} />' },
    /* Passing in empty options doesn't check any event handlers */
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [{ hoverInHandlers: [], hoverOutHandlers: [] }],
    },
    /* Passing in custom handlers */
    {
      code: '<div onMouseOver={() => {}} onFocus={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseOver'] }],
    },
    {
      code: '<div onMouseEnter={() => {}} onFocus={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseEnter'] }],
    },
    {
      code: '<div onMouseOut={() => {}} onBlur={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseOut'] }],
    },
    {
      code: '<div onMouseLeave={() => {}} onBlur={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseLeave'] }],
    },
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] },
      ],
    },
    /* Custom options only checks the handlers passed in */
    {
      code: '<div onMouseLeave={() => {}} />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] }],
    },
  )).map(parserOptionsMapper),
  invalid: parsers.all([].concat(
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
    { code: '<div onMouseOver={() => void 0} />;', errors: [mouseOverError] },
    { code: '<div onMouseOut={() => void 0} />', errors: [mouseOutError] },
    {
      code: '<div onMouseOver={() => void 0} onFocus={undefined} />;',
      errors: [mouseOverError],
    },
    {
      code: '<div onMouseOut={() => void 0} onBlur={undefined} />',
      errors: [mouseOutError],
    },
    {
      code: '<div onMouseOver={() => void 0} {...props} />',
      errors: [mouseOverError],
    },
    {
      code: '<div onMouseOut={() => void 0} {...props} />',
      errors: [mouseOutError],
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    /* Custom options */
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [
        { hoverInHandlers: ['onMouseOver'], hoverOutHandlers: ['onMouseOut'] },
      ],
      errors: [mouseOverError, mouseOutError],
    },
    {
      code: '<div onPointerEnter={() => {}} onPointerLeave={() => {}} />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] },
      ],
      errors: [pointerEnterError, pointerLeaveError],
    },
    {
      code: '<div onMouseOver={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseOver'] }],
      errors: [mouseOverError],
    },
    {
      code: '<div onPointerEnter={() => {}} />',
      options: [{ hoverInHandlers: ['onPointerEnter'] }],
      errors: [pointerEnterError],
    },
    {
      code: '<div onMouseOut={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseOut'] }],
      errors: [mouseOutError],
    },
    {
      code: '<div onPointerLeave={() => {}} />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] }],
      errors: [pointerLeaveError],
    },
  )).map(parserOptionsMapper),
=======
  ].map(parserOptionsMapper),
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
=======
>>>>>>> ee12506f5 (figuring out lint)
=======
>>>>>>> bda8256cb (figuring out lint)
  ].map(parserOptionsMapper),
=======
=======
>>>>>>> 6be43a322 (figuring out lint)
=======
>>>>>>> 5209f27ef (figuring out lint)
    /* Custom options */
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [
        { hoverInHandlers: ['onMouseOver'], hoverOutHandlers: ['onMouseOut'] },
      ],
      errors: [mouseOverError, mouseOutError],
    },
    {
      code: '<div onPointerEnter={() => {}} onPointerLeave={() => {}} />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] },
      ],
      errors: [pointerEnterError, pointerLeaveError],
    },
    {
      code: '<div onMouseOver={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseOver'] }],
      errors: [mouseOverError],
    },
    {
      code: '<div onPointerEnter={() => {}} />',
      options: [{ hoverInHandlers: ['onPointerEnter'] }],
      errors: [pointerEnterError],
    },
    {
      code: '<div onMouseOut={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseOut'] }],
      errors: [mouseOutError],
    },
    {
      code: '<div onPointerLeave={() => {}} />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] }],
      errors: [pointerLeaveError],
    },
  )).map(parserOptionsMapper),
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
=======
<<<<<<< HEAD
>>>>>>> 6be43a322 (figuring out lint)
<<<<<<< HEAD
>>>>>>> 84b8e337c (figuring out lint)
=======
=======
  ].map(parserOptionsMapper),
>>>>>>> cbaeadb69664be713d49558df22b6f02c48f3384
=======
  ].map(parserOptionsMapper),
=======
    /* Custom options */
    {
      code: '<div onMouseOver={() => {}} onMouseOut={() => {}} />',
      options: [
        { hoverInHandlers: ['onMouseOver'], hoverOutHandlers: ['onMouseOut'] },
      ],
      errors: [mouseOverError, mouseOutError],
    },
    {
      code: '<div onPointerEnter={() => {}} onPointerLeave={() => {}} />',
      options: [
        { hoverInHandlers: ['onPointerEnter'], hoverOutHandlers: ['onPointerLeave'] },
      ],
      errors: [pointerEnterError, pointerLeaveError],
    },
    {
      code: '<div onMouseOver={() => {}} />',
      options: [{ hoverInHandlers: ['onMouseOver'] }],
      errors: [mouseOverError],
    },
    {
      code: '<div onPointerEnter={() => {}} />',
      options: [{ hoverInHandlers: ['onPointerEnter'] }],
      errors: [pointerEnterError],
    },
    {
      code: '<div onMouseOut={() => {}} />',
      options: [{ hoverOutHandlers: ['onMouseOut'] }],
      errors: [mouseOutError],
    },
    {
      code: '<div onPointerLeave={() => {}} />',
      options: [{ hoverOutHandlers: ['onPointerLeave'] }],
      errors: [pointerLeaveError],
    },
  )).map(parserOptionsMapper),
>>>>>>> 6be43a322 (figuring out lint)
>>>>>>> 84b8e337c (figuring out lint)
>>>>>>> 5209f27ef (figuring out lint)
>>>>>>> bda8256cb (figuring out lint)
});
